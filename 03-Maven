What is Maven?
Maven is a build automation tool used primarily for Java projects. It simplifies project management by handling:

Dependency Management 
Build Lifecycle 
Project Configuration 
Testing & Deployment 

Key Concepts in Maven :-

1) POM (Project Object Model)
   The core file in a Maven project is pom.xml.
   It defines project dependencies, build configurations, plugins, and more.
   Example of pom.xml:


3) Maven Repository
   Maven downloads and stores dependencies from repositories:

   Local Repository → ~/.m2/repository
   Central Repository → Public Maven repository (https://repo.maven.apache.org/maven2/)
   Remote Repository → Custom/private repository (e.g., Nexus, Artifactory)

3  Maven Build Lifecycle
   Maven has different phases that define the order of execution:

   Phase	Description
   validate	Check project structure & POM validity
   compile	Compile source code
   test	Run unit tests
   package	Package the compiled code (JAR/WAR)
   verify	Run integration tests
   install	Install the artifact in the local repository
   deploy	Deploy to remote repository

 4) Maven Commands
   
    Basic Commands
    Command	Description
    mvn clean :- 	Deletes the target folder (cleans compiled files)
    mvn compile :-	Compiles the source code
    mvn test	:- Runs all unit tests
    mvn package :-	Creates a JAR/WAR file in the target/ folder
    mvn install	:- Installs the package into the local repository
    mvn deploy	:- Deploys the package to a remote repository
    mvn site	:- Generates project documentation
